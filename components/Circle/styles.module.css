@value smallRadius: 80px;
@value bigRadius: 120px;
@value smallBorderGap: 10px;
@value bigBorderGap: 20px;
@value thickness: 4px;

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.circle {
  width: calc((bigRadius + bigBorderGap) * 2);
  height: calc((bigRadius + bigBorderGap) * 2);
  display: flex;
  justify-content: center;
  align-items: center;
}

.image {
  width: calc(bigRadius * 2);
  height: calc(bigRadius * 2);
  border-radius: 50%;
  object-fit: cover;
}

.border {
  position: absolute;
  width: calc((bigRadius + bigBorderGap) * 2);
  height: calc((bigRadius + bigBorderGap) * 2);
  border-radius: 50%;
  border-width: thickness;
  border-style: dashed;
  border-color: var(--primary-color);
  animation: spin 120s linear infinite;
}

@media (min-width: 768px) {
  .circle {
    width: calc((smallRadius + smallBorderGap) * 2);
    height: calc((smallRadius + smallBorderGap) * 2);
  }

  .image {
    width: calc(smallRadius * 2);
    height: calc(smallRadius * 2);
  }

  .border {
    width: calc((smallRadius + smallBorderGap) * 2);
    height: calc((smallRadius + smallBorderGap) * 2);
  }
}

@media (min-width: 992px) {
  .circle {
    width: calc((bigRadius + bigBorderGap) * 2);
    height: calc((bigRadius + bigBorderGap) * 2);
  }

  .image {
    width: calc(bigRadius * 2);
    height: calc(bigRadius * 2);
  }

  .border {
    width: calc((bigRadius + bigBorderGap) * 2);
    height: calc((bigRadius + bigBorderGap) * 2);
    border-width: thickness * 2;
  }
}
